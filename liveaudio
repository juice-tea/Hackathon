import pyaudio
import asyncio
import websockets
import base64
import json
#from configure import auth_key


FRAME_PER_BUFFER = 3200
FORMAT = pyaudio.paInt16
CHANNELS = 1
RATE = 16000
p = pyaudio.PyAudio()

stream = p.open(
    format=FORMAT,
    channels=CHANNELS,
    rate=RATE,
    input=True,
    frames_per_buffer=FRAME_PER_BUFFER)

URL = "wss://api.assemblyai.com/v2/realtime/ws?sample_rate=16000"

async def send_receive():
    print(f'Connecting to AssemblyAI...')
    async with websockets.coneect(
        URL,
        extra_headers=(("Authorization", 'f6b51bc89f0648f4b887b2fb60acf223'),),
        ping_interval=5,
        ping_timeout=20) as _ws:
        await asyncio.sleep(0.1)
        print(f'Connected to AssemblyAI!')
        print('Sending audio...')
        async def send():
            while True:
                try:
                    data = stream.read(FRAME_PER_BUFFER)
                    data = base64.b64encode(data).decode('utf-8')
                    json_data = json.dumps({'audio_data': str(data)})
                    await _ws.send(json_data)
                except websockets.exception.ConnectionClosedError as e:
                    print(f'Connection closed: {e}')
                    assert e.code == 4008
                    break
                except Exception as e:
                    assert False, "Not a websocket 4008 error"
                await asyncio.sleep(0.01)
            return True

        async def receive():
            while True:
                try:
                    response = await _ws.recv()
                    print(json.loads(response)['text'])
                except websockets.exception.ConnectionClosedError as e:
                    print(f'Connection closed: {e}')
                    assert e.code == 4008
                    break
                except Exception as e:
                    assert False, "Not a websocket 4008 error"

        send_result, receive_result = await asyncio.gather(send(), receive())

asyncio.run(send_receive)